name: Spring CI CD

on:
  push:
    branches: ["develop"]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      # jdk 17 설치
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # gradle 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: |
          chmod +x gradlew

      # gradle 빌드
      - name: Build with Gradle
        env:
          DEV_JWT_SECRET_KEY: ${{ secrets.DEV_JWT_SECRET_KEY }}
        uses: gradle/gradle-build-action@v2.6.0
        with:
          arguments: build

      # make zip file
      - name: Make zip file
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash

      # AWS 사용자 정보 입력
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          aws-region: ap-northeast-2

      # S3에 zip 파일 업로드
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://${{ secrets.S3_BUCKET_NAME }}/deploy/$GITHUB_SHA.zip --source .

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # AWS 사용자 정보 입력
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          aws-region: ap-northeast-2

      # CodeDeploy에 배포 요청
      - name: Code Deploy
        env:
          ACTIVE_ENV: ${{ secrets.ACTIVE_ENV }}
          RDS_ENDPOINT: ${{ secrets.RDS_ENDPOINT }}
          RDS_USER: ${{ secrets.RDS_USER }}
          RDS_PASSWORD: ${{ secrets.RDS_PASSWORD }}
          DEV_DATABASE: ${{ secrets.DEV_DATABASE }}
        run:
          chmod +x scripts/stop.sh
          chmod +x scripts/infisical.sh
          chmod +x scripts/start.sh
          aws deploy create-deployment 
          --application-name ${{ secrets.CODE_DEPLOY_APP_NAME }}
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name ${{ secrets.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }}
          --s3-location bucket=${{ secrets.S3_BUCKET_NAME }},bundleType=zip,key=deploy/$GITHUB_SHA.zip
